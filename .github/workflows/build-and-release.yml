name: Build and Release Chrome Extension

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create extension package
      run: |
        # 创建临时目录用于打包
        mkdir -p build
        
        # 复制所有必要文件到build目录
        cp manifest.json build/
        cp background.js build/
        cp popup.html build/
        cp popup.js build/
        cp content.js build/
        cp options.html build/
        cp options.js build/
        cp -r icons build/
        
        # 创建zip包
        cd build
        zip -r ../anypush-extension.zip .
        cd ..
        
        # 显示文件信息
        ls -la anypush-extension.zip
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: chrome-extension-${{ github.sha }}
        path: anypush-extension.zip
        retention-days: 30
        
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: AnyPush ${{ github.ref_name }}
        body: |
          ## AnyPush Chrome Extension ${{ github.ref_name }}
          
          ### 📦 安装方法
          1. 下载下方的 `anypush-extension.zip` 文件
          2. 解压到本地文件夹
          3. 打开Chrome浏览器，进入 `chrome://extensions/`
          4. 开启"开发者模式"
          5. 点击"加载已解压的扩展程序"，选择解压后的文件夹
          
          ### ⚙️ 配置说明
          - 插件安装后需要配置推送服务才能使用
          - 支持企业微信机器人和Bark推送服务
          - 详细配置方法请查看 [INSTALL.md](https://github.com/H5Z2P5Z2P/anypush/blob/main/INSTALL.md)
          
          ### 🆕 主要功能
          - 选中文本推送（右键菜单或插件图标）
          - 页面链接推送（插件图标）
          - 自定义推送内容模板
          - 丰富的Bark推送选项配置
          - 配置云同步功能
          
          ### 🔒 隐私保护
          - 不收集任何用户数据
          - 推送内容直接发送到用户配置的服务
          - 所有配置存储在本地
        draft: false
        prerelease: false
        
    - name: Upload Release Asset (on tag push)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./anypush-extension.zip
        asset_name: anypush-extension.zip
        asset_content_type: application/zip